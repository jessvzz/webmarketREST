openapi: 3.0.1
info:
  title: WebMarket
  description: API per WebMarket
  contact:
    email: gea.viozzi@student.univaq.it
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: '1.0'
servers:
  - url: http://localhost:8080/WebMarketREST
tags:
  - name: Auth
    description: Operazioni di autenticazione
  - name: Richiesta Ordine
    description: Operazioni su richieste di acquisto
  - name: Proposta Acquisto
    description: Gestione delle proposte di acquisto
paths:
  /auth/login:
    post:
      summary: Effettua il login
      operationId: login
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Login effettuato con successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Credenziali non valide
  /auth/logout:
    post:
      summary: Effettua il logout
      operationId: logout
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout effettuato con successo
  /richieste:
    get:
      summary: Ottiene le richieste di acquisto in corso
      operationId: getOpenRequests
      tags:
        - Richiesta Ordine
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          required: true
          description: ID dell'ordinante
      responses:
        '200':
          description: Lista delle richieste di acquisto in corso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Richiesta'
  /richieste/{request_id}:
    get:
      summary: Ottieni i dettagli di una richiesta di acquisto
      operationId: getRequestDetails
      tags:
        - Richiesta Ordine
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dettagli della richiesta di acquisto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Richiesta'
        '404':
          description: Richiesta non trovata
  /richieste/{request_id}/assign:
    post:
      summary: Assegna un tecnico alla richiesta di acquisto
      operationId: assignTechnician
      tags:
        - Richiesta Ordine
      parameters:
        - name: request_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                technician_id:
                  type: integer
              required:
                - technician_id
      responses:
        '204':
          description: Tecnico assegnato con successo
        '404':
          description: Richiesta o tecnico non trovato       
  /proposte:
    get:
      summary: Ottiene le prosposte di acquisto in corso
      operationId: getProposals
      tags:
        - Proposta Acquisto
      parameters:
        - in: query
          name: user_id
          schema:
            type: integer
          required: true
          description: ID del tecnico
      responses:
        '200':
          description: Lista delle proposte di acquisto
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Proposta'
  /proposte/{idproposta}:
    get:
      summary: Ottieni i dettagli di una proposta di acquisto
      operationId: getProposalDetails
      tags:
        - Proposta Acquisto
      parameters:
        - name: idproposta
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dettagli della proposta di acquisto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposta'
        '404':
          description: Richiesta non trovata
                  
  
  /proposte/{idproposta}/approve:
    post:
      summary: Approva una proposta di acquisto
      operationId: approveProposal
      tags:
        - Proposta Acquisto
      parameters:
        - name: idproposta
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                approval:
                  type: string
                  enum:
                    - ACCETTATO
                    - RIFIUTATO
                reason:
                  type: string
                  description: Motivo del rifiuto (se applicabile)
      responses:
        '204':
          description: Proposta approvata o rifiutata con successo
        '404':
          description: Proposta non trovata
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Request:
      type: object
      properties:
        ID:
          type: integer
        codice_richiesta:
          type: string
        stato:
          type: string
          enum:
            - IN_ATTESA
            - PRESA_IN_CARICO
            - RISOLTA
            - ORDINATA
        data:
          type: string
          format: date
    Richiesta:
      type: object
      properties:
        ID:
          type: integer
        codice_richiesta:
          type: string
        note:
          type: string
        stato:
          type: string
        data:
          type: string
          format: date
        categoria:
          $ref: '#/components/schemas/Categoria'
        tecnico:
          $ref: '#/components/schemas/Tecnico'
        caratteristiche:
          type: array
          items:
            $ref: '#/components/schemas/Caratteristica'
        proposta_acquisto:
          $ref: '#/components/schemas/Proposta'
    Categoria:
      type: object
      properties:
        nome:
          type: string
    Tecnico:
      type: object
      properties:
        ID:
          type: integer
        username:
          type: string
    Caratteristica:
      type: object
      properties:
        nome:
          type: string
        valore:
          type: string
    Proposta:
      type: object
      properties:
        ID:
          type: integer
        produttore:
          type: string
        prodotto:
          type: string
        prezzo:
          type: number
        stato:
          type: string
          enum:
            - ACCETTATO
            - RIFIUTATO
            - IN_ATTESA

